{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ps976\\\\OneDrive\\\\Desktop\\\\MY-YT-CLONE(VIDEO-NEX)\\\\cllient\\\\src\\\\components\\\\SearchBar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { MagnifyingGlass, Microphone, MicrophoneSlash } from \"phosphor-react\";\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport SpeechRecognition, { useSpeechRecognition } from \"react-speech-recognition\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchBar = () => {\n  _s();\n  const navigate = useNavigate();\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [isMicOn, setIsMicOn] = useState(false);\n  const {\n    transcript,\n    resetTranscript,\n    browserSupportsSpeechRecognition\n  } = useSpeechRecognition();\n  function handleSubmit(e) {\n    e.preventDefault();\n    navigate(\"search/\".concat(searchTerm));\n    setSearchTerm(\"\");\n  }\n  const handleClick = () => {\n    //console.log(\"clik\")\n    !isMicOn ? SpeechRecognition.startListening() : SpeechRecognition.stopListening();\n    setIsMicOn(!isMicOn);\n  };\n  useEffect(() => {\n    setSearchTerm(transcript);\n  }, [transcript]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-bar\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleClick,\n        className: \"voice-search\",\n        children: !isMicOn ? /*#__PURE__*/_jsxDEV(Microphone, {\n          size: 25\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(MicrophoneSlash, {\n          size: 25,\n          onClick: handleSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"search-btn\",\n        children: /*#__PURE__*/_jsxDEV(MagnifyingGlass, {\n          size: 25\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchBar, \"sXsM1uJaJDRd8wdBs8Eu3FaERgs=\", false, function () {\n  return [useNavigate, useSpeechRecognition];\n});\n_c = SearchBar;\nexport default SearchBar;\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["React","useEffect","MagnifyingGlass","Microphone","MicrophoneSlash","useState","useNavigate","SpeechRecognition","useSpeechRecognition","jsxDEV","_jsxDEV","SearchBar","_s","navigate","searchTerm","setSearchTerm","isMicOn","setIsMicOn","transcript","resetTranscript","browserSupportsSpeechRecognition","handleSubmit","e","preventDefault","concat","handleClick","startListening","stopListening","className","children","onSubmit","type","placeholder","value","onChange","target","required","fileName","_jsxFileName","lineNumber","columnNumber","onClick","size","_c","$RefreshReg$"],"sources":["C:/Users/ps976/OneDrive/Desktop/MY-YT-CLONE(VIDEO-NEX)/cllient/src/components/SearchBar.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { MagnifyingGlass, Microphone, MicrophoneSlash } from \"phosphor-react\";\r\nimport { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport SpeechRecognition, {\r\n  useSpeechRecognition,\r\n} from \"react-speech-recognition\";\r\n\r\nconst SearchBar = () => {\r\n  const navigate = useNavigate();\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [isMicOn, setIsMicOn] = useState(false);\r\n\r\n  const { transcript, resetTranscript, browserSupportsSpeechRecognition } =\r\n    useSpeechRecognition();\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    navigate(`search/${searchTerm}`);\r\n    setSearchTerm(\"\");\r\n  }\r\n\r\n  const handleClick = () => {\r\n    //console.log(\"clik\")\r\n    !isMicOn\r\n      ? SpeechRecognition.startListening()\r\n      : SpeechRecognition.stopListening();\r\n    setIsMicOn(!isMicOn);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setSearchTerm(transcript);\r\n  }, [transcript]);\r\n\r\n  return (\r\n    <div className=\"search-bar\">\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search\"\r\n          value={searchTerm}\r\n          onChange={(e) => setSearchTerm(e.target.value)}\r\n          required\r\n        />\r\n        <button type=\"button\" onClick={handleClick} className=\"voice-search\">\r\n          {!isMicOn ? (\r\n            <Microphone size={25} />\r\n          ) : (\r\n            <MicrophoneSlash size={25} onClick={handleSubmit} />\r\n          )}\r\n        </button>\r\n        <button type=\"submit\" className=\"search-btn\">\r\n          <MagnifyingGlass size={25} />\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}